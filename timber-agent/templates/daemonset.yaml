apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "timber.fullname" . }}
  labels:
    app: {{ template "timber.name" . }}
    chart: {{ template "timber.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "timber.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "timber.fullname" . }}
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "timber.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: docker-pull-timber-agent
        image: "timberio/docker-client:17.03.2-ce"
        args: ["pull", "{{ .Values.image.repository }}:{{ .Values.image.tag }}"]
        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
    {{- if .Values.timber.proxyImage }}
      - name: "docker-pull-proxy-image"
        image: "timberio/docker-client:17.03.2-ce"
        args: ["pull", "{{ .Values.timber.proxyImage }}"]
        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
    {{- end }}
      containers:
      - name: {{ template "timber.name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["capture-kube", "-c", "/timber/timber.toml"]
        env:
        - name: TIMBER_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "timber.secretName" . }}
              key: apiKey
        - name: TIMBER_AGENT_PROXY_SERVICE_HOST
          value: {{ .Values.timber.proxyHost }}
        - name: TIMBER_AGENT_PROXY_SERVICE_PORT
          value: "{{ .Values.timber.proxyPort }}"
      {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- end }}
        volumeMounts:
        - name: hostname
          mountPath: /etc/hostname
          readOnly: true
        - name: {{ template "timber.configMapName" . }}
          mountPath: /timber
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
        - name: varlibtimberagent
          mountPath: /var/lib/timber-agent
        - name: varlog
          mountPath: /var/log
    {{- if .Values.timber.proxyImage }}
      - name: "{{ template "timber.name" . }}-proxy"
        image: {{ .Values.timber.proxyImage }}
        args: ["proxy", "-p", "{{ .Values.timber.proxyPort }}"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
      serviceAccount: {{ template "timber.serviceAccountName" . }}
    {{- end }}
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: hostname
        hostPath:
          path: /etc/hostname
      - name: {{ template "timber.configMapName" . }}
        configMap:
          name: {{ template "timber.configMapName" .}}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlibtimberagent
        hostPath:
          path: /var/lib/timber-agent
      - name: varlog
        hostPath:
          path: /var/log
    {{- if .Values.daemonsetTolerations }}
      tolerations:
{{ toYaml .Values.daemonsetTolerations | indent 8 }}
    {{- end }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  {{- if eq .Values.updateStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
